;; Simplified way of Adding melpa to the list.
(require 'package)
(add-to-list 'package-archives (cons "melpa" "https://melpa.org/packages/") t)
(package-initialize)

;; custom-set-variables was added by Custom.
;; If you edit it by hand, you could mess it up, so be careful.
;; Your init file should contain only one such instance.
;; If there is more than one, they won't work right.
(custom-set-variables '(inhibit-startup-screen t))

;; emacs cscope plugin as provided by the cscope package.
;(add-to-list 'load-path "/usr/share/cscope")
;(require 'xcscope)

(setq erc-interpret-mirc-color t)

;; Clear out whitespace
(add-hook 'before-save-hook 'delete-trailing-whitespace)

;; C Settings
(defun stieg-c-settings ()
  (setq c-basic-offset 3)
  (setq indent-tabs-mode nil)
  (setq-default tab-stop-list '(3 6 9 12 15))
)

(defun racecapture-c-settings ()
  (setq c-basic-offset 4)
  (setq indent-tabs-mode nil)
  (setq-default tab-stop-list '(4 8 12 16 20))
)
(add-hook 'c-mode-hook 'stieg-c-settings)

;; Perl Settings
(defun stieg-perl-settings ()
  (setq perl-indent-level 3))
(add-hook 'perl-mode-hook 'stieg-perl-settings)

;; Makefile Settings
(defun stieg-makefile-settings ()
  (setq-default tab-width 8)
  (setq-default tab-stop-list '(8 16 24 32 40)))
(add-hook 'makefile-mode-hook 'stieg-makefile-settings)

;; Typescript Settings
(defun setup-tide-mode ()
  (interactive)
  (tide-setup)
  (flycheck-mode +1)
  (setq flycheck-check-syntax-automatically '(save mode-enabled))
  (eldoc-mode +1)
  (tide-hl-identifier-mode +1)
  ;; company is an optional dependency. You have to
  ;; install it separately via package-install
  ;; `M-x package-install [ret] company`
  (company-mode +1))

(setq tide-format-options '(:insertSpaceAfterFunctionKeywordForAnonymousFunctions t :placeOpenBraceOnNewLineForFunctions nil :indentSize 2 :indentStyle 2))
;; aligns annotation to the right hand side
(setq company-tooltip-align-annotations t)

;; formats the buffer before saving
(add-hook 'before-save-hook 'tide-format-before-save)
(add-hook 'typescript-mode-hook #'setup-tide-mode)

;; TSX Settings
(require 'web-mode)
(add-to-list 'auto-mode-alist '("\\.tsx\\'" . web-mode))
(add-hook 'web-mode-hook
          (lambda ()
            (when (string-equal "tsx" (file-name-extension buffer-file-name))
              (setup-tide-mode))))
(flycheck-add-mode 'typescript-tslint 'web-mode)


;;
;; Special key bindings..
;;
(global-set-key (kbd "C-z") 'term)
(global-set-key (kbd "M-s k") 'kill-some-buffers)
(global-set-key (kbd "M-s c") 'compile)
(global-set-key (kbd "M-s g") 'find-grep)
(global-set-key (kbd "M-s r") 'rgrep)

;; Fix the annoying yes-or-no to be y-or-n
(fset 'yes-or-no-p 'y-or-n-p)

;; My Global settings
(setq-default tab-stop-list '(3 6 9 12 15))
(setq-default tab-width 3)
(setq-default indent-tabs-mode nil)
(setq-default line-number-mode t)
(setq-default column-number-mode t)

;;;; Enable Paren highlighting
(show-paren-mode t)
(setq-default blink-matching-paren t)
