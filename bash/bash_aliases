#!/bin/bash
#
# How these Aliases work...
#
# These aliases are created by breaking up the command into
# its syllables and then concatinating the first leter of
# every syllable into the aliased command.
#
# So in example
#   apt-get update translates to agud.
#
# Of course this won't work for every command and there will
# be commands that will share the same alias.  Whe that happens
# I try to work around it by appending the next letter after the
# last syllable until I don't have a conflict.  I am always looking
# for a better way to do it, so if you have one, drop me a line.
#
# -stieg
#

# Useful Apt Aliases
if which apt-get >/dev/null; then
    alias   agis='sudo -i apt-get install'
    alias   agud='sudo -i apt-get update'
    alias agatrm='sudo -i apt-get autoremove'
    alias   agug='sudo -i apt-get upgrade'
    alias  agdug='sudo -i apt-get dist-upgrade'
    alias   agrm='sudo -i apt-get remove'
fi

if which apt-cache >/dev/null; then
    alias  acse='apt-cache search'
    alias  acsh='apt-cache show'
    alias  acdp='apt-cache depends'
    alias   aca='apt-cache add'
    alias  acsp='apt-cache showpkg'
fi

# Perforce
if which p4 >/dev/null; then
    alias p4ds='p4 describe'
    alias p4op='p4 opened'
    alias p4sm='p4 submit'
    alias  p4s='p4 sync'
    alias p4ed='p4 edit'
    alias p4rv='p4 revert'
    alias  p4c='p4 change'
    alias p4ce='p4 client'
fi

# Check for the EMACS setting before setting color.  If in emacs, we don't
# want the color, so we disable it here.
if [ -z $EMACS ]; then
    alias    ls='ls --color=auto'
    alias    ll='ls -lgF --color=auto'
    alias    la='ls -A --color=auto'
    alias     l='ls -CF --color=auto'
    alias  grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
else
    for i in ls {,f,e}grep; do
        unalias $i;
    done
fi

# Add an aliases to resource the init
alias sourceInit='. ~/.bashrc'
